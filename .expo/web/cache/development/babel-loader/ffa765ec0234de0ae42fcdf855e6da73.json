{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Actions = function (_React$Component) {\n  _inherits(Actions, _React$Component);\n  var _super = _createSuper(Actions);\n  function Actions() {\n    var _this;\n    _classCallCheck(this, Actions);\n    _this = _super.apply(this, arguments);\n    _this.onActionsPress = function () {\n      var options = _this.props.options;\n      var optionKeys = Object.keys(options);\n      var cancelButtonIndex = optionKeys.indexOf('Cancel');\n      _this.context.actionSheet().showActionSheetWithOptions({\n        options: optionKeys,\n        cancelButtonIndex: cancelButtonIndex,\n        tintColor: _this.props.optionTintColor\n      }, function (buttonIndex) {\n        var key = optionKeys[buttonIndex];\n        if (key) {\n          options[key](_this.props);\n        }\n      });\n    };\n    return _this;\n  }\n  _createClass(Actions, [{\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      if (this.props.icon) {\n        return this.props.icon();\n      }\n      return _jsx(View, {\n        style: [styles.wrapper, this.props.wrapperStyle],\n        children: _jsx(Text, {\n          style: [styles.iconText, this.props.iconTextStyle],\n          children: \"+\"\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(TouchableOpacity, {\n        style: [styles.container, this.props.containerStyle],\n        onPress: this.props.onPressActionButton || this.onActionsPress,\n        children: this.renderIcon()\n      });\n    }\n  }]);\n  return Actions;\n}(React.Component);\nexport { Actions as default };\nActions.defaultProps = {\n  options: {},\n  optionTintColor: Color.optionTintColor,\n  icon: undefined,\n  containerStyle: {},\n  iconTextStyle: {},\n  wrapperStyle: {}\n};\nActions.propTypes = {\n  onSend: PropTypes.func,\n  options: PropTypes.object,\n  optionTintColor: PropTypes.string,\n  icon: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  wrapperStyle: StylePropType,\n  containerStyle: StylePropType\n};\nActions.contextTypes = {\n  actionSheet: PropTypes.func\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: 26,\n    height: 26,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  wrapper: {\n    borderRadius: 13,\n    borderColor: Color.defaultColor,\n    borderWidth: 2,\n    flex: 1\n  },\n  iconText: {\n    color: Color.defaultColor,\n    fontWeight: 'bold',\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["PropTypes","React","Color","StylePropType","Actions","options","props","optionKeys","Object","keys","cancelButtonIndex","indexOf","context","actionSheet","showActionSheetWithOptions","tintColor","optionTintColor","buttonIndex","key","icon","styles","wrapper","wrapperStyle","iconText","iconTextStyle","container","containerStyle","onPressActionButton","onActionsPress","renderIcon","Component","undefined","onSend","func","object","string","StyleSheet","create","width","height","marginLeft","marginBottom","borderRadius","borderColor","defaultColor","borderWidth","flex","color","fontWeight","fontSize","backgroundColor","backgroundTransparent","textAlign"],"sourceRoot":"","sources":["../src/Actions.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}