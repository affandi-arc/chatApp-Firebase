{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useLayoutEffect, useCallback } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { collection, addDoc, orderBy, query, onSnapshot } from 'firebase/firestore';\nimport { signOut } from 'firebase/auth';\nimport { auth, database } from \"../config/firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AntDesign } from '@expo/vector-icons';\nimport colors from \"../colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Chat() {\n  var _auth$currentUser;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var navigation = useNavigation();\n  var onSignOut = function onSignOut() {\n    signOut(auth).catch(function (error) {\n      return console.log('Error logging out: ', error);\n    });\n  };\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginRight: 10\n          },\n          onPress: onSignOut,\n          children: _jsx(AntDesign, {\n            name: \"logout\",\n            size: 24,\n            color: colors.gray,\n            style: {\n              marginRight: 10\n            }\n          })\n        });\n      }\n    });\n  }, [navigation]);\n  useLayoutEffect(function () {\n    var collectionRef = collection(database, 'chats');\n    var q = query(collectionRef, orderBy('createdAt', 'desc'));\n    var unsubscribe = onSnapshot(q, function (querySnapshot) {\n      console.log('querySnapshot unsusbscribe');\n      setMessages(querySnapshot.docs.map(function (doc) {\n        return {\n          _id: doc.data()._id,\n          createdAt: doc.data().createdAt.toDate(),\n          text: doc.data().text,\n          user: doc.data().user\n        };\n      }));\n    });\n    return unsubscribe;\n  }, []);\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n    var _messages$ = messages[0],\n      _id = _messages$._id,\n      createdAt = _messages$.createdAt,\n      text = _messages$.text,\n      user = _messages$.user;\n    addDoc(collection(database, 'chats'), {\n      _id: _id,\n      createdAt: createdAt,\n      text: text,\n      user: user\n    });\n  }, []);\n  return _jsx(GiftedChat, {\n    messages: messages,\n    showAvatarForEveryMessage: false,\n    showUserAvatar: false,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    messagesContainerStyle: {\n      backgroundColor: '#000'\n    },\n    textInputStyle: {\n      backgroundColor: '#fff',\n      borderRadius: 20\n    },\n    user: {\n      _id: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email,\n      avatar: 'https://i.pravatar.cc/300'\n    }\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useCallback","GiftedChat","collection","addDoc","orderBy","query","onSnapshot","signOut","auth","database","useNavigation","AntDesign","colors","Chat","messages","setMessages","navigation","onSignOut","catch","error","console","log","setOptions","headerRight","marginRight","gray","collectionRef","q","unsubscribe","querySnapshot","docs","map","doc","_id","data","createdAt","toDate","text","user","onSend","previousMessages","append","backgroundColor","borderRadius","currentUser","email","avatar"],"sources":["/home/affandi/ChatApp/screens/Chat.js"],"sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useLayoutEffect,\n    useCallback\n  } from 'react';\n  import { TouchableOpacity, Text } from 'react-native';\n  import { GiftedChat } from 'react-native-gifted-chat';\n  import {\n    collection,\n    addDoc,\n    orderBy,\n    query,\n    onSnapshot\n  } from 'firebase/firestore';\n  import { signOut } from 'firebase/auth';\n  import { auth, database } from '../config/firebase';\n  import { useNavigation } from '@react-navigation/native';\n  import { AntDesign } from '@expo/vector-icons';\n  import colors from '../colors';\n\n\n  export default function Chat() {\n\n    const [messages, setMessages] = useState([]);\n    const navigation = useNavigation();\n\n  const onSignOut = () => {\n      signOut(auth).catch(error => console.log('Error logging out: ', error));\n    };\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n          headerRight: () => (\n            <TouchableOpacity\n              style={{\n                marginRight: 10\n              }}\n              onPress={onSignOut}\n            >\n              <AntDesign name=\"logout\" size={24} color={colors.gray} style={{marginRight: 10}}/>\n            </TouchableOpacity>\n          )\n        });\n      }, [navigation]);\n\n    useLayoutEffect(() => {\n\n        const collectionRef = collection(database, 'chats');\n        const q = query(collectionRef, orderBy('createdAt', 'desc'));\n\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n        console.log('querySnapshot unsusbscribe');\n          setMessages(\n            querySnapshot.docs.map(doc => ({\n              _id: doc.data()._id,\n              createdAt: doc.data().createdAt.toDate(),\n              text: doc.data().text,\n              user: doc.data().user\n            }))\n          );\n        });\n    return unsubscribe;\n      }, []);\n\n    const onSend = useCallback((messages = []) => {\n        setMessages(previousMessages =>\n          GiftedChat.append(previousMessages, messages)\n        );\n        // setMessages([...messages, ...messages]);\n        const { _id, createdAt, text, user } = messages[0];    \n        addDoc(collection(database, 'chats'), {\n          _id,\n          createdAt,\n          text,\n          user\n        });\n      }, []);\n\n      return (\n        // <>\n        //   {messages.map(message => (\n        //     <Text key={message._id}>{message.text}</Text>\n        //   ))}\n        // </>\n        <GiftedChat\n          messages={messages}\n          showAvatarForEveryMessage={false}\n          showUserAvatar={false}\n          onSend={messages => onSend(messages)}\n          messagesContainerStyle={{\n            backgroundColor: '#000'\n          }}\n          textInputStyle={{\n            backgroundColor: '#fff',\n            borderRadius: 20,\n          }}\n          user={{\n            _id: auth?.currentUser?.email,\n            avatar: 'https://i.pravatar.cc/300'\n          }}\n        />\n      );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}